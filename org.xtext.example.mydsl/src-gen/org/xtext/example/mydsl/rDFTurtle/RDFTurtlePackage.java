/**
 * generated by Xtext 2.32.0.M3
 */
package org.xtext.example.mydsl.rDFTurtle;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.example.mydsl.rDFTurtle.RDFTurtleFactory
 * @model kind="package"
 * @generated
 */
public interface RDFTurtlePackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "rDFTurtle";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/example/mydsl/RDFTurtle";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "rDFTurtle";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  RDFTurtlePackage eINSTANCE = org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.TurtleDocImpl <em>Turtle Doc</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.rDFTurtle.impl.TurtleDocImpl
   * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getTurtleDoc()
   * @generated
   */
  int TURTLE_DOC = 0;

  /**
   * The feature id for the '<em><b>Statements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TURTLE_DOC__STATEMENTS = 0;

  /**
   * The number of structural features of the '<em>Turtle Doc</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TURTLE_DOC_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.StatementImpl <em>Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.rDFTurtle.impl.StatementImpl
   * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getStatement()
   * @generated
   */
  int STATEMENT = 1;

  /**
   * The feature id for the '<em><b>Directive</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT__DIRECTIVE = 0;

  /**
   * The feature id for the '<em><b>Triples</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT__TRIPLES = 1;

  /**
   * The number of structural features of the '<em>Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.DirectiveImpl <em>Directive</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.rDFTurtle.impl.DirectiveImpl
   * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getDirective()
   * @generated
   */
  int DIRECTIVE = 2;

  /**
   * The feature id for the '<em><b>Prefix</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIRECTIVE__PREFIX = 0;

  /**
   * The feature id for the '<em><b>Base</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIRECTIVE__BASE = 1;

  /**
   * The feature id for the '<em><b>Sparql Prefix</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIRECTIVE__SPARQL_PREFIX = 2;

  /**
   * The feature id for the '<em><b>Sparql Base</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIRECTIVE__SPARQL_BASE = 3;

  /**
   * The number of structural features of the '<em>Directive</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIRECTIVE_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.PrefixIDImpl <em>Prefix ID</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.rDFTurtle.impl.PrefixIDImpl
   * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getPrefixID()
   * @generated
   */
  int PREFIX_ID = 3;

  /**
   * The feature id for the '<em><b>Prefix Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PREFIX_ID__PREFIX_NAME = 0;

  /**
   * The feature id for the '<em><b>Iriref</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PREFIX_ID__IRIREF = 1;

  /**
   * The number of structural features of the '<em>Prefix ID</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PREFIX_ID_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.BaseImpl <em>Base</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.rDFTurtle.impl.BaseImpl
   * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getBase()
   * @generated
   */
  int BASE = 4;

  /**
   * The feature id for the '<em><b>Iriref</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BASE__IRIREF = 0;

  /**
   * The number of structural features of the '<em>Base</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BASE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.SparqlPrefixImpl <em>Sparql Prefix</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.rDFTurtle.impl.SparqlPrefixImpl
   * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getSparqlPrefix()
   * @generated
   */
  int SPARQL_PREFIX = 5;

  /**
   * The feature id for the '<em><b>Prefix Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SPARQL_PREFIX__PREFIX_NAME = 0;

  /**
   * The feature id for the '<em><b>Iriref</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SPARQL_PREFIX__IRIREF = 1;

  /**
   * The number of structural features of the '<em>Sparql Prefix</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SPARQL_PREFIX_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.SparqlBaseImpl <em>Sparql Base</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.rDFTurtle.impl.SparqlBaseImpl
   * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getSparqlBase()
   * @generated
   */
  int SPARQL_BASE = 6;

  /**
   * The feature id for the '<em><b>Iriref</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SPARQL_BASE__IRIREF = 0;

  /**
   * The number of structural features of the '<em>Sparql Base</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SPARQL_BASE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.TriplesImpl <em>Triples</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.rDFTurtle.impl.TriplesImpl
   * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getTriples()
   * @generated
   */
  int TRIPLES = 7;

  /**
   * The feature id for the '<em><b>Subject</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRIPLES__SUBJECT = 0;

  /**
   * The feature id for the '<em><b>Predicate Object List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRIPLES__PREDICATE_OBJECT_LIST = 1;

  /**
   * The number of structural features of the '<em>Triples</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRIPLES_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.PredicateObjectImpl <em>Predicate Object</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.rDFTurtle.impl.PredicateObjectImpl
   * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getPredicateObject()
   * @generated
   */
  int PREDICATE_OBJECT = 8;

  /**
   * The feature id for the '<em><b>Verb</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PREDICATE_OBJECT__VERB = 0;

  /**
   * The feature id for the '<em><b>Object List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PREDICATE_OBJECT__OBJECT_LIST = 1;

  /**
   * The number of structural features of the '<em>Predicate Object</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PREDICATE_OBJECT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.PredicateObjectListImpl <em>Predicate Object List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.rDFTurtle.impl.PredicateObjectListImpl
   * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getPredicateObjectList()
   * @generated
   */
  int PREDICATE_OBJECT_LIST = 9;

  /**
   * The feature id for the '<em><b>Predicate Objects</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PREDICATE_OBJECT_LIST__PREDICATE_OBJECTS = 0;

  /**
   * The number of structural features of the '<em>Predicate Object List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PREDICATE_OBJECT_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.ObjectListImpl <em>Object List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.rDFTurtle.impl.ObjectListImpl
   * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getObjectList()
   * @generated
   */
  int OBJECT_LIST = 10;

  /**
   * The feature id for the '<em><b>Objects</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OBJECT_LIST__OBJECTS = 0;

  /**
   * The number of structural features of the '<em>Object List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OBJECT_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.VerbImpl <em>Verb</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.rDFTurtle.impl.VerbImpl
   * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getVerb()
   * @generated
   */
  int VERB = 11;

  /**
   * The feature id for the '<em><b>Predicate</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VERB__PREDICATE = 0;

  /**
   * The feature id for the '<em><b>Is A</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VERB__IS_A = 1;

  /**
   * The number of structural features of the '<em>Verb</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VERB_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.SubjectImpl <em>Subject</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.rDFTurtle.impl.SubjectImpl
   * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getSubject()
   * @generated
   */
  int SUBJECT = 12;

  /**
   * The feature id for the '<em><b>Resource</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBJECT__RESOURCE = 0;

  /**
   * The feature id for the '<em><b>Blank</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBJECT__BLANK = 1;

  /**
   * The number of structural features of the '<em>Subject</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBJECT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.iResourceImpl <em>iResource</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.rDFTurtle.impl.iResourceImpl
   * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getiResource()
   * @generated
   */
  int IRESOURCE = 13;

  /**
   * The feature id for the '<em><b>Iri Ref</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IRESOURCE__IRI_REF = 0;

  /**
   * The feature id for the '<em><b>Qname</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IRESOURCE__QNAME = 1;

  /**
   * The number of structural features of the '<em>iResource</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IRESOURCE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.ObjectImpl <em>Object</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.rDFTurtle.impl.ObjectImpl
   * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getObject()
   * @generated
   */
  int OBJECT = 14;

  /**
   * The feature id for the '<em><b>Resource</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OBJECT__RESOURCE = 0;

  /**
   * The feature id for the '<em><b>Blank</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OBJECT__BLANK = 1;

  /**
   * The feature id for the '<em><b>Literal</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OBJECT__LITERAL = 2;

  /**
   * The number of structural features of the '<em>Object</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OBJECT_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.LanguageStringImpl <em>Language String</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.rDFTurtle.impl.LanguageStringImpl
   * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getLanguageString()
   * @generated
   */
  int LANGUAGE_STRING = 15;

  /**
   * The feature id for the '<em><b>Qutoed String</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LANGUAGE_STRING__QUTOED_STRING = 0;

  /**
   * The feature id for the '<em><b>Lang</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LANGUAGE_STRING__LANG = 1;

  /**
   * The number of structural features of the '<em>Language String</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LANGUAGE_STRING_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.LiteralImpl <em>Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.rDFTurtle.impl.LiteralImpl
   * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getLiteral()
   * @generated
   */
  int LITERAL = 16;

  /**
   * The feature id for the '<em><b>Language String</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__LANGUAGE_STRING = 0;

  /**
   * The feature id for the '<em><b>Datatype String</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__DATATYPE_STRING = 1;

  /**
   * The feature id for the '<em><b>Dword</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__DWORD = 2;

  /**
   * The feature id for the '<em><b>Real</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__REAL = 3;

  /**
   * The feature id for the '<em><b>Decimal</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__DECIMAL = 4;

  /**
   * The feature id for the '<em><b>Bool</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__BOOL = 5;

  /**
   * The number of structural features of the '<em>Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.DatatypeStringImpl <em>Datatype String</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.rDFTurtle.impl.DatatypeStringImpl
   * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getDatatypeString()
   * @generated
   */
  int DATATYPE_STRING = 17;

  /**
   * The feature id for the '<em><b>Qutoed String</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DATATYPE_STRING__QUTOED_STRING = 0;

  /**
   * The feature id for the '<em><b>Resource</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DATATYPE_STRING__RESOURCE = 1;

  /**
   * The number of structural features of the '<em>Datatype String</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DATATYPE_STRING_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.BlankImpl <em>Blank</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.rDFTurtle.impl.BlankImpl
   * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getBlank()
   * @generated
   */
  int BLANK = 18;

  /**
   * The feature id for the '<em><b>Node ID</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLANK__NODE_ID = 0;

  /**
   * The feature id for the '<em><b>Is Square</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLANK__IS_SQUARE = 1;

  /**
   * The feature id for the '<em><b>Predicate Object List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLANK__PREDICATE_OBJECT_LIST = 2;

  /**
   * The feature id for the '<em><b>Collection</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLANK__COLLECTION = 3;

  /**
   * The number of structural features of the '<em>Blank</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLANK_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.ItemListImpl <em>Item List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.rDFTurtle.impl.ItemListImpl
   * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getItemList()
   * @generated
   */
  int ITEM_LIST = 19;

  /**
   * The feature id for the '<em><b>Objects</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITEM_LIST__OBJECTS = 0;

  /**
   * The number of structural features of the '<em>Item List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITEM_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.CollectionImpl <em>Collection</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.rDFTurtle.impl.CollectionImpl
   * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getCollection()
   * @generated
   */
  int COLLECTION = 20;

  /**
   * The feature id for the '<em><b>Item List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION__ITEM_LIST = 0;

  /**
   * The number of structural features of the '<em>Collection</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.NodeIDImpl <em>Node ID</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.rDFTurtle.impl.NodeIDImpl
   * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getNodeID()
   * @generated
   */
  int NODE_ID = 21;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_ID__NAME = 0;

  /**
   * The number of structural features of the '<em>Node ID</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_ID_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.QnameImpl <em>Qname</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.rDFTurtle.impl.QnameImpl
   * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getQname()
   * @generated
   */
  int QNAME = 22;

  /**
   * The feature id for the '<em><b>Prefix Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QNAME__PREFIX_NAME = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QNAME__NAME = 1;

  /**
   * The number of structural features of the '<em>Qname</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QNAME_FEATURE_COUNT = 2;


  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.rDFTurtle.TurtleDoc <em>Turtle Doc</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Turtle Doc</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.TurtleDoc
   * @generated
   */
  EClass getTurtleDoc();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.rDFTurtle.TurtleDoc#getStatements <em>Statements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Statements</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.TurtleDoc#getStatements()
   * @see #getTurtleDoc()
   * @generated
   */
  EReference getTurtleDoc_Statements();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.rDFTurtle.Statement <em>Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Statement</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Statement
   * @generated
   */
  EClass getStatement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.rDFTurtle.Statement#getDirective <em>Directive</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Directive</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Statement#getDirective()
   * @see #getStatement()
   * @generated
   */
  EReference getStatement_Directive();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.rDFTurtle.Statement#getTriples <em>Triples</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Triples</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Statement#getTriples()
   * @see #getStatement()
   * @generated
   */
  EReference getStatement_Triples();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.rDFTurtle.Directive <em>Directive</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Directive</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Directive
   * @generated
   */
  EClass getDirective();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.rDFTurtle.Directive#getPrefix <em>Prefix</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Prefix</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Directive#getPrefix()
   * @see #getDirective()
   * @generated
   */
  EReference getDirective_Prefix();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.rDFTurtle.Directive#getBase <em>Base</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Base</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Directive#getBase()
   * @see #getDirective()
   * @generated
   */
  EReference getDirective_Base();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.rDFTurtle.Directive#getSparqlPrefix <em>Sparql Prefix</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Sparql Prefix</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Directive#getSparqlPrefix()
   * @see #getDirective()
   * @generated
   */
  EReference getDirective_SparqlPrefix();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.rDFTurtle.Directive#getSparqlBase <em>Sparql Base</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Sparql Base</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Directive#getSparqlBase()
   * @see #getDirective()
   * @generated
   */
  EReference getDirective_SparqlBase();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.rDFTurtle.PrefixID <em>Prefix ID</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Prefix ID</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.PrefixID
   * @generated
   */
  EClass getPrefixID();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.rDFTurtle.PrefixID#getPrefixName <em>Prefix Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Prefix Name</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.PrefixID#getPrefixName()
   * @see #getPrefixID()
   * @generated
   */
  EAttribute getPrefixID_PrefixName();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.rDFTurtle.PrefixID#getIriref <em>Iriref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Iriref</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.PrefixID#getIriref()
   * @see #getPrefixID()
   * @generated
   */
  EAttribute getPrefixID_Iriref();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.rDFTurtle.Base <em>Base</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Base</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Base
   * @generated
   */
  EClass getBase();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.rDFTurtle.Base#getIriref <em>Iriref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Iriref</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Base#getIriref()
   * @see #getBase()
   * @generated
   */
  EAttribute getBase_Iriref();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.rDFTurtle.SparqlPrefix <em>Sparql Prefix</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Sparql Prefix</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.SparqlPrefix
   * @generated
   */
  EClass getSparqlPrefix();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.rDFTurtle.SparqlPrefix#getPrefixName <em>Prefix Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Prefix Name</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.SparqlPrefix#getPrefixName()
   * @see #getSparqlPrefix()
   * @generated
   */
  EAttribute getSparqlPrefix_PrefixName();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.rDFTurtle.SparqlPrefix#getIriref <em>Iriref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Iriref</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.SparqlPrefix#getIriref()
   * @see #getSparqlPrefix()
   * @generated
   */
  EAttribute getSparqlPrefix_Iriref();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.rDFTurtle.SparqlBase <em>Sparql Base</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Sparql Base</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.SparqlBase
   * @generated
   */
  EClass getSparqlBase();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.rDFTurtle.SparqlBase#getIriref <em>Iriref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Iriref</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.SparqlBase#getIriref()
   * @see #getSparqlBase()
   * @generated
   */
  EAttribute getSparqlBase_Iriref();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.rDFTurtle.Triples <em>Triples</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Triples</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Triples
   * @generated
   */
  EClass getTriples();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.rDFTurtle.Triples#getSubject <em>Subject</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Subject</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Triples#getSubject()
   * @see #getTriples()
   * @generated
   */
  EReference getTriples_Subject();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.rDFTurtle.Triples#getPredicateObjectList <em>Predicate Object List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Predicate Object List</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Triples#getPredicateObjectList()
   * @see #getTriples()
   * @generated
   */
  EReference getTriples_PredicateObjectList();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.rDFTurtle.PredicateObject <em>Predicate Object</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Predicate Object</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.PredicateObject
   * @generated
   */
  EClass getPredicateObject();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.rDFTurtle.PredicateObject#getVerb <em>Verb</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Verb</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.PredicateObject#getVerb()
   * @see #getPredicateObject()
   * @generated
   */
  EReference getPredicateObject_Verb();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.rDFTurtle.PredicateObject#getObjectList <em>Object List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Object List</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.PredicateObject#getObjectList()
   * @see #getPredicateObject()
   * @generated
   */
  EReference getPredicateObject_ObjectList();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.rDFTurtle.PredicateObjectList <em>Predicate Object List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Predicate Object List</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.PredicateObjectList
   * @generated
   */
  EClass getPredicateObjectList();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.rDFTurtle.PredicateObjectList#getPredicateObjects <em>Predicate Objects</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Predicate Objects</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.PredicateObjectList#getPredicateObjects()
   * @see #getPredicateObjectList()
   * @generated
   */
  EReference getPredicateObjectList_PredicateObjects();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.rDFTurtle.ObjectList <em>Object List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Object List</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.ObjectList
   * @generated
   */
  EClass getObjectList();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.rDFTurtle.ObjectList#getObjects <em>Objects</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Objects</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.ObjectList#getObjects()
   * @see #getObjectList()
   * @generated
   */
  EReference getObjectList_Objects();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.rDFTurtle.Verb <em>Verb</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Verb</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Verb
   * @generated
   */
  EClass getVerb();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.rDFTurtle.Verb#getPredicate <em>Predicate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Predicate</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Verb#getPredicate()
   * @see #getVerb()
   * @generated
   */
  EReference getVerb_Predicate();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.rDFTurtle.Verb#isIsA <em>Is A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Is A</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Verb#isIsA()
   * @see #getVerb()
   * @generated
   */
  EAttribute getVerb_IsA();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.rDFTurtle.Subject <em>Subject</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Subject</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Subject
   * @generated
   */
  EClass getSubject();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.rDFTurtle.Subject#getResource <em>Resource</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Resource</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Subject#getResource()
   * @see #getSubject()
   * @generated
   */
  EReference getSubject_Resource();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.rDFTurtle.Subject#getBlank <em>Blank</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Blank</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Subject#getBlank()
   * @see #getSubject()
   * @generated
   */
  EReference getSubject_Blank();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.rDFTurtle.iResource <em>iResource</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>iResource</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.iResource
   * @generated
   */
  EClass getiResource();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.rDFTurtle.iResource#getIriRef <em>Iri Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Iri Ref</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.iResource#getIriRef()
   * @see #getiResource()
   * @generated
   */
  EAttribute getiResource_IriRef();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.rDFTurtle.iResource#getQname <em>Qname</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Qname</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.iResource#getQname()
   * @see #getiResource()
   * @generated
   */
  EReference getiResource_Qname();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.rDFTurtle.Object <em>Object</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Object</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Object
   * @generated
   */
  EClass getObject();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.rDFTurtle.Object#getResource <em>Resource</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Resource</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Object#getResource()
   * @see #getObject()
   * @generated
   */
  EReference getObject_Resource();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.rDFTurtle.Object#getBlank <em>Blank</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Blank</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Object#getBlank()
   * @see #getObject()
   * @generated
   */
  EReference getObject_Blank();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.rDFTurtle.Object#getLiteral <em>Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Literal</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Object#getLiteral()
   * @see #getObject()
   * @generated
   */
  EReference getObject_Literal();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.rDFTurtle.LanguageString <em>Language String</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Language String</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.LanguageString
   * @generated
   */
  EClass getLanguageString();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.rDFTurtle.LanguageString#getQutoedString <em>Qutoed String</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Qutoed String</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.LanguageString#getQutoedString()
   * @see #getLanguageString()
   * @generated
   */
  EAttribute getLanguageString_QutoedString();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.rDFTurtle.LanguageString#getLang <em>Lang</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Lang</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.LanguageString#getLang()
   * @see #getLanguageString()
   * @generated
   */
  EAttribute getLanguageString_Lang();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.rDFTurtle.Literal <em>Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Literal</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Literal
   * @generated
   */
  EClass getLiteral();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.rDFTurtle.Literal#getLanguageString <em>Language String</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Language String</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Literal#getLanguageString()
   * @see #getLiteral()
   * @generated
   */
  EReference getLiteral_LanguageString();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.rDFTurtle.Literal#getDatatypeString <em>Datatype String</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Datatype String</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Literal#getDatatypeString()
   * @see #getLiteral()
   * @generated
   */
  EReference getLiteral_DatatypeString();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.rDFTurtle.Literal#getDword <em>Dword</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Dword</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Literal#getDword()
   * @see #getLiteral()
   * @generated
   */
  EAttribute getLiteral_Dword();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.rDFTurtle.Literal#getReal <em>Real</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Real</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Literal#getReal()
   * @see #getLiteral()
   * @generated
   */
  EAttribute getLiteral_Real();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.rDFTurtle.Literal#getDecimal <em>Decimal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Decimal</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Literal#getDecimal()
   * @see #getLiteral()
   * @generated
   */
  EAttribute getLiteral_Decimal();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.rDFTurtle.Literal#getBool <em>Bool</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Bool</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Literal#getBool()
   * @see #getLiteral()
   * @generated
   */
  EAttribute getLiteral_Bool();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.rDFTurtle.DatatypeString <em>Datatype String</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Datatype String</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.DatatypeString
   * @generated
   */
  EClass getDatatypeString();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.rDFTurtle.DatatypeString#getQutoedString <em>Qutoed String</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Qutoed String</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.DatatypeString#getQutoedString()
   * @see #getDatatypeString()
   * @generated
   */
  EAttribute getDatatypeString_QutoedString();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.rDFTurtle.DatatypeString#getResource <em>Resource</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Resource</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.DatatypeString#getResource()
   * @see #getDatatypeString()
   * @generated
   */
  EReference getDatatypeString_Resource();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.rDFTurtle.Blank <em>Blank</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Blank</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Blank
   * @generated
   */
  EClass getBlank();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.rDFTurtle.Blank#getNodeID <em>Node ID</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Node ID</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Blank#getNodeID()
   * @see #getBlank()
   * @generated
   */
  EReference getBlank_NodeID();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.rDFTurtle.Blank#isIsSquare <em>Is Square</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Is Square</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Blank#isIsSquare()
   * @see #getBlank()
   * @generated
   */
  EAttribute getBlank_IsSquare();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.rDFTurtle.Blank#getPredicateObjectList <em>Predicate Object List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Predicate Object List</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Blank#getPredicateObjectList()
   * @see #getBlank()
   * @generated
   */
  EReference getBlank_PredicateObjectList();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.rDFTurtle.Blank#getCollection <em>Collection</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Collection</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Blank#getCollection()
   * @see #getBlank()
   * @generated
   */
  EReference getBlank_Collection();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.rDFTurtle.ItemList <em>Item List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Item List</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.ItemList
   * @generated
   */
  EClass getItemList();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.rDFTurtle.ItemList#getObjects <em>Objects</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Objects</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.ItemList#getObjects()
   * @see #getItemList()
   * @generated
   */
  EReference getItemList_Objects();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.rDFTurtle.Collection <em>Collection</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Collection</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Collection
   * @generated
   */
  EClass getCollection();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.rDFTurtle.Collection#getItemList <em>Item List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Item List</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Collection#getItemList()
   * @see #getCollection()
   * @generated
   */
  EReference getCollection_ItemList();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.rDFTurtle.NodeID <em>Node ID</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Node ID</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.NodeID
   * @generated
   */
  EClass getNodeID();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.rDFTurtle.NodeID#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.NodeID#getName()
   * @see #getNodeID()
   * @generated
   */
  EAttribute getNodeID_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.rDFTurtle.Qname <em>Qname</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Qname</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Qname
   * @generated
   */
  EClass getQname();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.rDFTurtle.Qname#getPrefixName <em>Prefix Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Prefix Name</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Qname#getPrefixName()
   * @see #getQname()
   * @generated
   */
  EAttribute getQname_PrefixName();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.rDFTurtle.Qname#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.mydsl.rDFTurtle.Qname#getName()
   * @see #getQname()
   * @generated
   */
  EAttribute getQname_Name();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  RDFTurtleFactory getRDFTurtleFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.TurtleDocImpl <em>Turtle Doc</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.rDFTurtle.impl.TurtleDocImpl
     * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getTurtleDoc()
     * @generated
     */
    EClass TURTLE_DOC = eINSTANCE.getTurtleDoc();

    /**
     * The meta object literal for the '<em><b>Statements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TURTLE_DOC__STATEMENTS = eINSTANCE.getTurtleDoc_Statements();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.StatementImpl <em>Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.rDFTurtle.impl.StatementImpl
     * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getStatement()
     * @generated
     */
    EClass STATEMENT = eINSTANCE.getStatement();

    /**
     * The meta object literal for the '<em><b>Directive</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT__DIRECTIVE = eINSTANCE.getStatement_Directive();

    /**
     * The meta object literal for the '<em><b>Triples</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT__TRIPLES = eINSTANCE.getStatement_Triples();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.DirectiveImpl <em>Directive</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.rDFTurtle.impl.DirectiveImpl
     * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getDirective()
     * @generated
     */
    EClass DIRECTIVE = eINSTANCE.getDirective();

    /**
     * The meta object literal for the '<em><b>Prefix</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DIRECTIVE__PREFIX = eINSTANCE.getDirective_Prefix();

    /**
     * The meta object literal for the '<em><b>Base</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DIRECTIVE__BASE = eINSTANCE.getDirective_Base();

    /**
     * The meta object literal for the '<em><b>Sparql Prefix</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DIRECTIVE__SPARQL_PREFIX = eINSTANCE.getDirective_SparqlPrefix();

    /**
     * The meta object literal for the '<em><b>Sparql Base</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DIRECTIVE__SPARQL_BASE = eINSTANCE.getDirective_SparqlBase();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.PrefixIDImpl <em>Prefix ID</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.rDFTurtle.impl.PrefixIDImpl
     * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getPrefixID()
     * @generated
     */
    EClass PREFIX_ID = eINSTANCE.getPrefixID();

    /**
     * The meta object literal for the '<em><b>Prefix Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PREFIX_ID__PREFIX_NAME = eINSTANCE.getPrefixID_PrefixName();

    /**
     * The meta object literal for the '<em><b>Iriref</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PREFIX_ID__IRIREF = eINSTANCE.getPrefixID_Iriref();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.BaseImpl <em>Base</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.rDFTurtle.impl.BaseImpl
     * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getBase()
     * @generated
     */
    EClass BASE = eINSTANCE.getBase();

    /**
     * The meta object literal for the '<em><b>Iriref</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BASE__IRIREF = eINSTANCE.getBase_Iriref();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.SparqlPrefixImpl <em>Sparql Prefix</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.rDFTurtle.impl.SparqlPrefixImpl
     * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getSparqlPrefix()
     * @generated
     */
    EClass SPARQL_PREFIX = eINSTANCE.getSparqlPrefix();

    /**
     * The meta object literal for the '<em><b>Prefix Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SPARQL_PREFIX__PREFIX_NAME = eINSTANCE.getSparqlPrefix_PrefixName();

    /**
     * The meta object literal for the '<em><b>Iriref</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SPARQL_PREFIX__IRIREF = eINSTANCE.getSparqlPrefix_Iriref();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.SparqlBaseImpl <em>Sparql Base</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.rDFTurtle.impl.SparqlBaseImpl
     * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getSparqlBase()
     * @generated
     */
    EClass SPARQL_BASE = eINSTANCE.getSparqlBase();

    /**
     * The meta object literal for the '<em><b>Iriref</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SPARQL_BASE__IRIREF = eINSTANCE.getSparqlBase_Iriref();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.TriplesImpl <em>Triples</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.rDFTurtle.impl.TriplesImpl
     * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getTriples()
     * @generated
     */
    EClass TRIPLES = eINSTANCE.getTriples();

    /**
     * The meta object literal for the '<em><b>Subject</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TRIPLES__SUBJECT = eINSTANCE.getTriples_Subject();

    /**
     * The meta object literal for the '<em><b>Predicate Object List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TRIPLES__PREDICATE_OBJECT_LIST = eINSTANCE.getTriples_PredicateObjectList();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.PredicateObjectImpl <em>Predicate Object</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.rDFTurtle.impl.PredicateObjectImpl
     * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getPredicateObject()
     * @generated
     */
    EClass PREDICATE_OBJECT = eINSTANCE.getPredicateObject();

    /**
     * The meta object literal for the '<em><b>Verb</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PREDICATE_OBJECT__VERB = eINSTANCE.getPredicateObject_Verb();

    /**
     * The meta object literal for the '<em><b>Object List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PREDICATE_OBJECT__OBJECT_LIST = eINSTANCE.getPredicateObject_ObjectList();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.PredicateObjectListImpl <em>Predicate Object List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.rDFTurtle.impl.PredicateObjectListImpl
     * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getPredicateObjectList()
     * @generated
     */
    EClass PREDICATE_OBJECT_LIST = eINSTANCE.getPredicateObjectList();

    /**
     * The meta object literal for the '<em><b>Predicate Objects</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PREDICATE_OBJECT_LIST__PREDICATE_OBJECTS = eINSTANCE.getPredicateObjectList_PredicateObjects();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.ObjectListImpl <em>Object List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.rDFTurtle.impl.ObjectListImpl
     * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getObjectList()
     * @generated
     */
    EClass OBJECT_LIST = eINSTANCE.getObjectList();

    /**
     * The meta object literal for the '<em><b>Objects</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OBJECT_LIST__OBJECTS = eINSTANCE.getObjectList_Objects();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.VerbImpl <em>Verb</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.rDFTurtle.impl.VerbImpl
     * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getVerb()
     * @generated
     */
    EClass VERB = eINSTANCE.getVerb();

    /**
     * The meta object literal for the '<em><b>Predicate</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VERB__PREDICATE = eINSTANCE.getVerb_Predicate();

    /**
     * The meta object literal for the '<em><b>Is A</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VERB__IS_A = eINSTANCE.getVerb_IsA();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.SubjectImpl <em>Subject</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.rDFTurtle.impl.SubjectImpl
     * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getSubject()
     * @generated
     */
    EClass SUBJECT = eINSTANCE.getSubject();

    /**
     * The meta object literal for the '<em><b>Resource</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SUBJECT__RESOURCE = eINSTANCE.getSubject_Resource();

    /**
     * The meta object literal for the '<em><b>Blank</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SUBJECT__BLANK = eINSTANCE.getSubject_Blank();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.iResourceImpl <em>iResource</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.rDFTurtle.impl.iResourceImpl
     * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getiResource()
     * @generated
     */
    EClass IRESOURCE = eINSTANCE.getiResource();

    /**
     * The meta object literal for the '<em><b>Iri Ref</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IRESOURCE__IRI_REF = eINSTANCE.getiResource_IriRef();

    /**
     * The meta object literal for the '<em><b>Qname</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IRESOURCE__QNAME = eINSTANCE.getiResource_Qname();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.ObjectImpl <em>Object</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.rDFTurtle.impl.ObjectImpl
     * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getObject()
     * @generated
     */
    EClass OBJECT = eINSTANCE.getObject();

    /**
     * The meta object literal for the '<em><b>Resource</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OBJECT__RESOURCE = eINSTANCE.getObject_Resource();

    /**
     * The meta object literal for the '<em><b>Blank</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OBJECT__BLANK = eINSTANCE.getObject_Blank();

    /**
     * The meta object literal for the '<em><b>Literal</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OBJECT__LITERAL = eINSTANCE.getObject_Literal();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.LanguageStringImpl <em>Language String</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.rDFTurtle.impl.LanguageStringImpl
     * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getLanguageString()
     * @generated
     */
    EClass LANGUAGE_STRING = eINSTANCE.getLanguageString();

    /**
     * The meta object literal for the '<em><b>Qutoed String</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LANGUAGE_STRING__QUTOED_STRING = eINSTANCE.getLanguageString_QutoedString();

    /**
     * The meta object literal for the '<em><b>Lang</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LANGUAGE_STRING__LANG = eINSTANCE.getLanguageString_Lang();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.LiteralImpl <em>Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.rDFTurtle.impl.LiteralImpl
     * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getLiteral()
     * @generated
     */
    EClass LITERAL = eINSTANCE.getLiteral();

    /**
     * The meta object literal for the '<em><b>Language String</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LITERAL__LANGUAGE_STRING = eINSTANCE.getLiteral_LanguageString();

    /**
     * The meta object literal for the '<em><b>Datatype String</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LITERAL__DATATYPE_STRING = eINSTANCE.getLiteral_DatatypeString();

    /**
     * The meta object literal for the '<em><b>Dword</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LITERAL__DWORD = eINSTANCE.getLiteral_Dword();

    /**
     * The meta object literal for the '<em><b>Real</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LITERAL__REAL = eINSTANCE.getLiteral_Real();

    /**
     * The meta object literal for the '<em><b>Decimal</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LITERAL__DECIMAL = eINSTANCE.getLiteral_Decimal();

    /**
     * The meta object literal for the '<em><b>Bool</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LITERAL__BOOL = eINSTANCE.getLiteral_Bool();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.DatatypeStringImpl <em>Datatype String</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.rDFTurtle.impl.DatatypeStringImpl
     * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getDatatypeString()
     * @generated
     */
    EClass DATATYPE_STRING = eINSTANCE.getDatatypeString();

    /**
     * The meta object literal for the '<em><b>Qutoed String</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DATATYPE_STRING__QUTOED_STRING = eINSTANCE.getDatatypeString_QutoedString();

    /**
     * The meta object literal for the '<em><b>Resource</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DATATYPE_STRING__RESOURCE = eINSTANCE.getDatatypeString_Resource();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.BlankImpl <em>Blank</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.rDFTurtle.impl.BlankImpl
     * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getBlank()
     * @generated
     */
    EClass BLANK = eINSTANCE.getBlank();

    /**
     * The meta object literal for the '<em><b>Node ID</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLANK__NODE_ID = eINSTANCE.getBlank_NodeID();

    /**
     * The meta object literal for the '<em><b>Is Square</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BLANK__IS_SQUARE = eINSTANCE.getBlank_IsSquare();

    /**
     * The meta object literal for the '<em><b>Predicate Object List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLANK__PREDICATE_OBJECT_LIST = eINSTANCE.getBlank_PredicateObjectList();

    /**
     * The meta object literal for the '<em><b>Collection</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLANK__COLLECTION = eINSTANCE.getBlank_Collection();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.ItemListImpl <em>Item List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.rDFTurtle.impl.ItemListImpl
     * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getItemList()
     * @generated
     */
    EClass ITEM_LIST = eINSTANCE.getItemList();

    /**
     * The meta object literal for the '<em><b>Objects</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ITEM_LIST__OBJECTS = eINSTANCE.getItemList_Objects();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.CollectionImpl <em>Collection</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.rDFTurtle.impl.CollectionImpl
     * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getCollection()
     * @generated
     */
    EClass COLLECTION = eINSTANCE.getCollection();

    /**
     * The meta object literal for the '<em><b>Item List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COLLECTION__ITEM_LIST = eINSTANCE.getCollection_ItemList();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.NodeIDImpl <em>Node ID</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.rDFTurtle.impl.NodeIDImpl
     * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getNodeID()
     * @generated
     */
    EClass NODE_ID = eINSTANCE.getNodeID();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NODE_ID__NAME = eINSTANCE.getNodeID_Name();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.rDFTurtle.impl.QnameImpl <em>Qname</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.rDFTurtle.impl.QnameImpl
     * @see org.xtext.example.mydsl.rDFTurtle.impl.RDFTurtlePackageImpl#getQname()
     * @generated
     */
    EClass QNAME = eINSTANCE.getQname();

    /**
     * The meta object literal for the '<em><b>Prefix Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute QNAME__PREFIX_NAME = eINSTANCE.getQname_PrefixName();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute QNAME__NAME = eINSTANCE.getQname_Name();

  }

} //RDFTurtlePackage
